openapi: 3.0.3
info:
  title: 'Laravel - Documentación de la API'
  description: 'API para la gestión del sistema de Evaluación de Programas y Servicios.'
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
tags:
  -
    name: Aseguradora
    description: ''
  -
    name: Auth
    description: ''
  -
    name: Citas
    description: ''
  -
    name: Ciudad
    description: ''
  -
    name: 'Consulta Medica'
    description: ''
  -
    name: Consultorio
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: Especialidad
    description: ''
  -
    name: 'Examen Medico'
    description: ''
  -
    name: Factura
    description: ''
  -
    name: 'Historia Clinica'
    description: ''
  -
    name: Horario
    description: ''
  -
    name: Laboratorio
    description: ''
  -
    name: Medicamento
    description: ''
  -
    name: Medico
    description: ''
  -
    name: 'Orden Examen'
    description: ''
  -
    name: Paciente
    description: ''
  -
    name: Pago
    description: ''
  -
    name: 'Receta Medica'
    description: ''
  -
    name: Reportes
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'Puedes obtener tu token accediendo a tu panel de control y haciendo clic en <b>Generar token de API</b>.'
security:
  -
    default: []
paths:
  /api/aseguradoras:
    get:
      summary: 'Obtiene una lista de todas las aseguradoras.'
      operationId: obtieneUnaListaDeTodasLasAseguradoras
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: 'Aseguradora Example'
                      nit: '123456789'
                      direccion: 'Calle Principal 123'
                      telefono: '1234567890'
                      email: contacto@aseguradora.com
                      ciudad: '1'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: 'Aseguradora Example'
                        nit: '123456789'
                        direccion: 'Calle Principal 123'
                        telefono: '1234567890'
                        email: contacto@aseguradora.com
                        ciudad: '1'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Aseguradora Example'
                        nit:
                          type: string
                          example: '123456789'
                        direccion:
                          type: string
                          example: 'Calle Principal 123'
                        telefono:
                          type: string
                          example: '1234567890'
                        email:
                          type: string
                          example: contacto@aseguradora.com
                        ciudad:
                          type: string
                          example: '1'
      tags:
        - Aseguradora
    post:
      summary: 'Crea una nueva aseguradora.'
      operationId: creaUnaNuevaAseguradora
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Aseguradora Example'
                  nit: '123456789'
                  direccion: 'Calle Principal 123'
                  telefono: '1234567890'
                  email: contacto@aseguradora.com
                  ciudad: '1'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Aseguradora Example'
                  nit:
                    type: string
                    example: '123456789'
                  direccion:
                    type: string
                    example: 'Calle Principal 123'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: contacto@aseguradora.com
                  ciudad:
                    type: string
                    example: '1'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Aseguradora
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre de la aseguradora.'
                  example: 'Aseguradora Example'
                  nullable: false
                nit:
                  type: string
                  description: 'NIT de la aseguradora.'
                  example: '123456789'
                  nullable: false
                direccion:
                  type: string
                  description: 'opcional Dirección de la aseguradora.'
                  example: 'Calle Principal 123'
                  nullable: true
                telefono:
                  type: string
                  description: 'opcional Teléfono de la aseguradora.'
                  example: '1234567890'
                  nullable: true
                email:
                  type: string
                  description: 'opcional Email de la aseguradora.'
                  example: contacto@aseguradora.com
                  nullable: true
                ciudad:
                  type: string
                  description: 'opcional ID de la ciudad.'
                  example: '1'
                  nullable: true
              required:
                - nombre
                - nit
  '/api/aseguradoras/{id}':
    get:
      summary: 'Obtiene una aseguradora específica por su ID.'
      operationId: obtieneUnaAseguradoraEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Aseguradora Example'
                  nit: '123456789'
                  direccion: 'Calle Principal 123'
                  telefono: '1234567890'
                  email: contacto@aseguradora.com
                  ciudad: '1'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Aseguradora Example'
                  nit:
                    type: string
                    example: '123456789'
                  direccion:
                    type: string
                    example: 'Calle Principal 123'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: contacto@aseguradora.com
                  ciudad:
                    type: string
                    example: '1'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Aseguradora no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Aseguradora no encontrada'
      tags:
        - Aseguradora
    put:
      summary: 'Actualiza una aseguradora existente.'
      operationId: actualizaUnaAseguradoraExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Aseguradora Example'
                  nit: '123456789'
                  direccion: 'Calle Principal 123'
                  telefono: '1234567890'
                  email: contacto@aseguradora.com
                  ciudad: '1'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Aseguradora Example'
                  nit:
                    type: string
                    example: '123456789'
                  direccion:
                    type: string
                    example: 'Calle Principal 123'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: contacto@aseguradora.com
                  ciudad:
                    type: string
                    example: '1'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Aseguradora no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Aseguradora no encontrada'
      tags:
        - Aseguradora
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'opcional Nombre de la aseguradora.'
                  example: 'Aseguradora Example'
                  nullable: false
                nit:
                  type: string
                  description: 'opcional NIT de la aseguradora.'
                  example: '123456789'
                  nullable: false
                direccion:
                  type: string
                  description: 'opcional Dirección de la aseguradora.'
                  example: 'Calle Principal 123'
                  nullable: true
                telefono:
                  type: string
                  description: 'opcional Teléfono de la aseguradora.'
                  example: '1234567890'
                  nullable: true
                email:
                  type: string
                  description: 'opcional Email de la aseguradora.'
                  example: contacto@aseguradora.com
                  nullable: true
                ciudad:
                  type: string
                  description: 'opcional ID de la ciudad.'
                  example: '1'
                  nullable: true
    delete:
      summary: 'Elimina una aseguradora existente.'
      operationId: eliminaUnaAseguradoraExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Aseguradora eliminada'
                properties:
                  message:
                    type: string
                    example: 'Aseguradora eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Aseguradora no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Aseguradora no encontrada'
      tags:
        - Aseguradora
    parameters:
      -
        in: path
        name: id
        description: 'ID de la aseguradora.'
        example: '1'
        required: true
        schema:
          type: string
  /api/registrar:
    post:
      summary: 'Registra un nuevo usuario en el sistema.'
      operationId: registraUnNuevoUsuarioEnElSistema
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Usuario creado satisfactoriamente'
                  user:
                    name: 'John Doe'
                    email: john@example.com
                    role: user
                  role: user
                properties:
                  message:
                    type: string
                    example: 'Usuario creado satisfactoriamente'
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                      role:
                        type: string
                        example: user
                  role:
                    type: string
                    example: user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Nombre del usuario.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'Correo electrónico del usuario.'
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Contraseña del usuario.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: 'Inicia sesión de usuario y genera token de acceso.'
      operationId: iniciaSesinDeUsuarioYGeneraTokenDeAcceso
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Login exitoso'
                  user:
                    id: 1
                    name: 'John Doe'
                    email: user@example.com
                    role: user
                  token: 1|example-token-string
                properties:
                  message:
                    type: string
                    example: 'Login exitoso'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: user
                  token:
                    type: string
                    example: 1|example-token-string
        401:
          description: 'Invalid credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Credenciales incorrectas'
                properties:
                  message:
                    type: string
                    example: 'Credenciales incorrectas'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Correo electrónico del usuario.'
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Contraseña del usuario.'
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Cierra la sesión del usuario actual eliminando el token de acceso.'
      operationId: cierraLaSesinDelUsuarioActualEliminandoElTokenDeAcceso
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Sesión cerrada'
                properties:
                  message:
                    type: string
                    example: 'Sesión cerrada'
      tags:
        - Auth
  /api/admin/register:
    post:
      summary: 'Registra un nuevo administrador en el sistema.'
      operationId: registraUnNuevoAdministradorEnElSistema
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Admin creado satisfactoriamente'
                  user:
                    name: 'Admin User'
                    email: admin@example.com
                    role: admin
                  role: admin
                properties:
                  message:
                    type: string
                    example: 'Admin creado satisfactoriamente'
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Admin User'
                      email:
                        type: string
                        example: admin@example.com
                      role:
                        type: string
                        example: admin
                  role:
                    type: string
                    example: admin
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Nombre del administrador.'
                  example: 'Admin User'
                  nullable: false
                email:
                  type: string
                  description: 'Correo electrónico del administrador.'
                  example: admin@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Contraseña del administrador.'
                  example: admin123
                  nullable: false
              required:
                - name
                - email
                - password
  /api/citas:
    get:
      summary: 'Obtiene una lista de todas las citas.'
      operationId: obtieneUnaListaDeTodasLasCitas
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      paciente_id: 1
                      especialidad_id: 1
                      medico_id: 1
                      consultorio_id: 1
                      fecha: '2025-01-01'
                      hora: '10:00:00'
                      estado: programada
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        paciente_id: 1
                        especialidad_id: 1
                        medico_id: 1
                        consultorio_id: 1
                        fecha: '2025-01-01'
                        hora: '10:00:00'
                        estado: programada
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        paciente_id:
                          type: integer
                          example: 1
                        especialidad_id:
                          type: integer
                          example: 1
                        medico_id:
                          type: integer
                          example: 1
                        consultorio_id:
                          type: integer
                          example: 1
                        fecha:
                          type: string
                          example: '2025-01-01'
                        hora:
                          type: string
                          example: '10:00:00'
                        estado:
                          type: string
                          example: programada
      tags:
        - Citas
    post:
      summary: 'Crea una nueva cita.'
      operationId: creaUnaNuevaCita
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  especialidad_id: 1
                  medico_id: 1
                  consultorio_id: 1
                  fecha: '2025-01-01'
                  hora: '10:00:00'
                  estado: programada
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  especialidad_id:
                    type: integer
                    example: 1
                  medico_id:
                    type: integer
                    example: 1
                  consultorio_id:
                    type: integer
                    example: 1
                  fecha:
                    type: string
                    example: '2025-01-01'
                  hora:
                    type: string
                    example: '10:00:00'
                  estado:
                    type: string
                    example: programada
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Citas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'ID del paciente.'
                  example: 1
                  nullable: false
                especialidad_id:
                  type: integer
                  description: 'ID de la especialidad.'
                  example: 1
                  nullable: false
                medico_id:
                  type: integer
                  description: 'ID del médico.'
                  example: 1
                  nullable: false
                consultorio_id:
                  type: integer
                  description: 'ID del consultorio.'
                  example: 1
                  nullable: false
                fecha:
                  type: date
                  description: 'Fecha de la cita.'
                  example: '2025-01-01'
                  nullable: false
                hora:
                  type: time
                  description: 'Hora de la cita.'
                  example: '10:00:00'
                  nullable: false
                estado:
                  type: string
                  description: 'Estado de la cita.'
                  example: programada
                  nullable: false
              required:
                - paciente_id
                - especialidad_id
                - medico_id
                - consultorio_id
                - fecha
                - hora
                - estado
  '/api/citas/{id}':
    get:
      summary: 'Obtiene una cita específica por su ID.'
      operationId: obtieneUnaCitaEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  especialidad_id: 1
                  medico_id: 1
                  consultorio_id: 1
                  fecha: '2025-01-01'
                  hora: '10:00:00'
                  estado: programada
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  especialidad_id:
                    type: integer
                    example: 1
                  medico_id:
                    type: integer
                    example: 1
                  consultorio_id:
                    type: integer
                    example: 1
                  fecha:
                    type: string
                    example: '2025-01-01'
                  hora:
                    type: string
                    example: '10:00:00'
                  estado:
                    type: string
                    example: programada
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cita no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Cita no encontrada'
      tags:
        - Citas
    put:
      summary: 'Actualiza una cita existente.'
      operationId: actualizaUnaCitaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  especialidad_id: 1
                  medico_id: 1
                  consultorio_id: 1
                  fecha: '2025-01-01'
                  hora: '10:00:00'
                  estado: programada
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  especialidad_id:
                    type: integer
                    example: 1
                  medico_id:
                    type: integer
                    example: 1
                  consultorio_id:
                    type: integer
                    example: 1
                  fecha:
                    type: string
                    example: '2025-01-01'
                  hora:
                    type: string
                    example: '10:00:00'
                  estado:
                    type: string
                    example: programada
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cita no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Cita no encontrada'
      tags:
        - Citas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'ID del paciente.'
                  example: 1
                  nullable: false
                especialidad_id:
                  type: integer
                  description: 'ID de la especialidad.'
                  example: 1
                  nullable: false
                medico_id:
                  type: integer
                  description: 'ID del médico.'
                  example: 1
                  nullable: false
                consultorio_id:
                  type: integer
                  description: 'ID del consultorio.'
                  example: 1
                  nullable: false
                fecha:
                  type: date
                  description: 'opcional Fecha de la cita.'
                  example: '2025-01-01'
                  nullable: false
                hora:
                  type: time
                  description: 'opcional Hora de la cita.'
                  example: '10:00:00'
                  nullable: false
                estado:
                  type: string
                  description: 'opcional Estado de la cita.'
                  example: programada
                  nullable: false
              required:
                - paciente_id
                - especialidad_id
                - medico_id
                - consultorio_id
    delete:
      summary: 'Elimina una cita existente.'
      operationId: eliminaUnaCitaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cita eliminada'
                properties:
                  message:
                    type: string
                    example: 'Cita eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cita no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Cita no encontrada'
      tags:
        - Citas
    parameters:
      -
        in: path
        name: id
        description: 'ID de la cita.'
        example: '1'
        required: true
        schema:
          type: string
  /api/ciudades:
    get:
      summary: 'Obtiene una lista de todas las ciudades.'
      operationId: obtieneUnaListaDeTodasLasCiudades
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: 'Ciudad Example'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: 'Ciudad Example'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Ciudad Example'
      tags:
        - Ciudad
      security: []
  '/api/ciudades/{id}':
    get:
      summary: 'Obtiene una ciudad específica por su ID.'
      operationId: obtieneUnaCiudadEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Ciudad Example'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Ciudad Example'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ciudad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Ciudad no encontrada'
      tags:
        - Ciudad
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'ID de la ciudad.'
        example: '1'
        required: true
        schema:
          type: string
  /api/consultas-medicas:
    get:
      summary: 'Obtiene una lista de todas las consultas médicas.'
      operationId: obtieneUnaListaDeTodasLasConsultasMdicas
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      cita_id: 1
                      motivo: 'Dolor de cabeza'
                      diagnostico: Migraña
                      tratamiento: 'Medicamento para migraña'
                      fecha_consulta: '2025-09-05'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        cita_id: 1
                        motivo: 'Dolor de cabeza'
                        diagnostico: Migraña
                        tratamiento: 'Medicamento para migraña'
                        fecha_consulta: '2025-09-05'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        cita_id:
                          type: integer
                          example: 1
                        motivo:
                          type: string
                          example: 'Dolor de cabeza'
                        diagnostico:
                          type: string
                          example: Migraña
                        tratamiento:
                          type: string
                          example: 'Medicamento para migraña'
                        fecha_consulta:
                          type: string
                          example: '2025-09-05'
      tags:
        - 'Consulta Medica'
    post:
      summary: 'Crea una nueva consulta médica.'
      operationId: creaUnaNuevaConsultaMdica
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  cita_id: 1
                  motivo: 'Dolor de cabeza'
                  diagnostico: Migraña
                  tratamiento: 'Medicamento para migraña'
                  fecha_consulta: '2025-09-05'
                properties:
                  id:
                    type: integer
                    example: 1
                  cita_id:
                    type: integer
                    example: 1
                  motivo:
                    type: string
                    example: 'Dolor de cabeza'
                  diagnostico:
                    type: string
                    example: Migraña
                  tratamiento:
                    type: string
                    example: 'Medicamento para migraña'
                  fecha_consulta:
                    type: string
                    example: '2025-09-05'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - 'Consulta Medica'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cita_id:
                  type: integer
                  description: 'opcional ID de la cita.'
                  example: 1
                  nullable: true
                motivo:
                  type: string
                  description: 'Motivo de la consulta.'
                  example: 'Dolor de cabeza'
                  nullable: false
                diagnostico:
                  type: string
                  description: 'opcional Diagnóstico de la consulta.'
                  example: Migraña
                  nullable: true
                tratamiento:
                  type: string
                  description: 'opcional Tratamiento prescrito.'
                  example: 'Medicamento para migraña'
                  nullable: true
                fecha_consulta:
                  type: date
                  description: 'Fecha de la consulta.'
                  example: '2025-09-05'
                  nullable: false
              required:
                - motivo
                - fecha_consulta
  '/api/consultas-medicas/{id}':
    get:
      summary: 'Obtiene una consulta médica específica por su ID.'
      operationId: obtieneUnaConsultaMdicaEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  cita_id: 1
                  motivo: 'Dolor de cabeza'
                  diagnostico: Migraña
                  tratamiento: 'Medicamento para migraña'
                  fecha_consulta: '2025-09-05'
                properties:
                  id:
                    type: integer
                    example: 1
                  cita_id:
                    type: integer
                    example: 1
                  motivo:
                    type: string
                    example: 'Dolor de cabeza'
                  diagnostico:
                    type: string
                    example: Migraña
                  tratamiento:
                    type: string
                    example: 'Medicamento para migraña'
                  fecha_consulta:
                    type: string
                    example: '2025-09-05'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consulta médica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Consulta médica no encontrada'
      tags:
        - 'Consulta Medica'
    put:
      summary: 'Actualiza una consulta médica existente.'
      operationId: actualizaUnaConsultaMdicaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  cita_id: 1
                  motivo: 'Dolor de cabeza'
                  diagnostico: Migraña
                  tratamiento: 'Medicamento para migraña'
                  fecha_consulta: '2025-09-05'
                properties:
                  id:
                    type: integer
                    example: 1
                  cita_id:
                    type: integer
                    example: 1
                  motivo:
                    type: string
                    example: 'Dolor de cabeza'
                  diagnostico:
                    type: string
                    example: Migraña
                  tratamiento:
                    type: string
                    example: 'Medicamento para migraña'
                  fecha_consulta:
                    type: string
                    example: '2025-09-05'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consulta médica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Consulta médica no encontrada'
      tags:
        - 'Consulta Medica'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                cita_id:
                  type: integer
                  description: 'opcional ID de la cita.'
                  example: 1
                  nullable: true
                motivo:
                  type: string
                  description: 'opcional Motivo de la consulta.'
                  example: 'Dolor de cabeza'
                  nullable: false
                diagnostico:
                  type: string
                  description: 'opcional Diagnóstico de la consulta.'
                  example: Migraña
                  nullable: true
                tratamiento:
                  type: string
                  description: 'opcional Tratamiento prescrito.'
                  example: 'Medicamento para migraña'
                  nullable: true
                fecha_consulta:
                  type: date
                  description: 'opcional Fecha de la consulta.'
                  example: '2025-09-05'
                  nullable: false
    delete:
      summary: 'Elimina una consulta médica existente.'
      operationId: eliminaUnaConsultaMdicaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consulta médica eliminada'
                properties:
                  message:
                    type: string
                    example: 'Consulta médica eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consulta médica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Consulta médica no encontrada'
      tags:
        - 'Consulta Medica'
    parameters:
      -
        in: path
        name: id
        description: 'ID de la consulta médica.'
        example: '1'
        required: true
        schema:
          type: string
  /api/consultorios:
    get:
      summary: 'Obtiene una lista de todos los consultorios.'
      operationId: obtieneUnaListaDeTodosLosConsultorios
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      ciudad_id: 1
                      nombre: 'Consultorio Principal'
                      direccion: 'Calle 123'
                      telefono: '1234567890'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        ciudad_id: 1
                        nombre: 'Consultorio Principal'
                        direccion: 'Calle 123'
                        telefono: '1234567890'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        ciudad_id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Consultorio Principal'
                        direccion:
                          type: string
                          example: 'Calle 123'
                        telefono:
                          type: string
                          example: '1234567890'
      tags:
        - Consultorio
    post:
      summary: 'Crea un nuevo consultorio.'
      operationId: creaUnNuevoConsultorio
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  ciudad_id: 1
                  nombre: 'Consultorio Principal'
                  direccion: 'Calle 123'
                  telefono: '1234567890'
                properties:
                  id:
                    type: integer
                    example: 1
                  ciudad_id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Consultorio Principal'
                  direccion:
                    type: string
                    example: 'Calle 123'
                  telefono:
                    type: string
                    example: '1234567890'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Consultorio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ciudad_id:
                  type: integer
                  description: 'ID de la ciudad.'
                  example: 1
                  nullable: false
                nombre:
                  type: string
                  description: 'Nombre del consultorio.'
                  example: 'Consultorio Principal'
                  nullable: false
                direccion:
                  type: string
                  description: 'opcional Dirección del consultorio.'
                  example: 'Calle 123'
                  nullable: true
                telefono:
                  type: string
                  description: 'opcional Teléfono del consultorio.'
                  example: '1234567890'
                  nullable: true
              required:
                - ciudad_id
                - nombre
  '/api/consultorios/{id}':
    get:
      summary: 'Obtiene un consultorio específico por su ID.'
      operationId: obtieneUnConsultorioEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  ciudad_id: 1
                  nombre: 'Consultorio Principal'
                  direccion: 'Calle 123'
                  telefono: '1234567890'
                properties:
                  id:
                    type: integer
                    example: 1
                  ciudad_id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Consultorio Principal'
                  direccion:
                    type: string
                    example: 'Calle 123'
                  telefono:
                    type: string
                    example: '1234567890'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consultorio no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Consultorio no encontrado'
      tags:
        - Consultorio
    put:
      summary: 'Actualiza un consultorio existente.'
      operationId: actualizaUnConsultorioExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  ciudad_id: 1
                  nombre: 'Consultorio Principal'
                  direccion: 'Calle 123'
                  telefono: '1234567890'
                properties:
                  id:
                    type: integer
                    example: 1
                  ciudad_id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Consultorio Principal'
                  direccion:
                    type: string
                    example: 'Calle 123'
                  telefono:
                    type: string
                    example: '1234567890'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consultorio no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Consultorio no encontrado'
      tags:
        - Consultorio
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ciudad_id:
                  type: integer
                  description: 'opcional ID de la ciudad.'
                  example: 1
                  nullable: false
                nombre:
                  type: string
                  description: 'opcional Nombre del consultorio.'
                  example: 'Consultorio Principal'
                  nullable: false
                direccion:
                  type: string
                  description: 'opcional Dirección del consultorio.'
                  example: 'Calle 123'
                  nullable: true
                telefono:
                  type: string
                  description: 'opcional Teléfono del consultorio.'
                  example: '1234567890'
                  nullable: true
    delete:
      summary: 'Elimina un consultorio existente.'
      operationId: eliminaUnConsultorioExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consultorio eliminado'
                properties:
                  message:
                    type: string
                    example: 'Consultorio eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Consultorio no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Consultorio no encontrado'
      tags:
        - Consultorio
    parameters:
      -
        in: path
        name: id
        description: 'ID del consultorio.'
        example: '1'
        required: true
        schema:
          type: string
  /api/afiliaciones:
    get:
      summary: "Grupo: Afiliacion\nObtiene una lista de todas las afiliaciones."
      operationId: grupoAfiliacionObtieneUnaListaDeTodasLasAfiliaciones
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      paciente_id: 1
                      aseguradora_id: 1
                      fecha_inicio: '2025-01-01'
                      fecha_fin: '2025-12-31'
                      estado: activo
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        paciente_id: 1
                        aseguradora_id: 1
                        fecha_inicio: '2025-01-01'
                        fecha_fin: '2025-12-31'
                        estado: activo
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        paciente_id:
                          type: integer
                          example: 1
                        aseguradora_id:
                          type: integer
                          example: 1
                        fecha_inicio:
                          type: string
                          example: '2025-01-01'
                        fecha_fin:
                          type: string
                          example: '2025-12-31'
                        estado:
                          type: string
                          example: activo
      tags:
        - Endpoints
    post:
      summary: "Grupo: Afiliacion\nCrea una nueva afiliación."
      operationId: grupoAfiliacionCreaUnaNuevaAfiliacin
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  aseguradora_id: 1
                  fecha_inicio: '2025-01-01'
                  fecha_fin: '2025-12-31'
                  estado: activo
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  aseguradora_id:
                    type: integer
                    example: 1
                  fecha_inicio:
                    type: string
                    example: '2025-01-01'
                  fecha_fin:
                    type: string
                    example: '2025-12-31'
                  estado:
                    type: string
                    example: activo
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'ID del paciente.'
                  example: 1
                  nullable: false
                aseguradora_id:
                  type: integer
                  description: 'ID de la aseguradora.'
                  example: 1
                  nullable: false
                fecha_inicio:
                  type: date
                  description: 'Fecha de inicio de la afiliación.'
                  example: '2025-01-01'
                  nullable: false
                fecha_fin:
                  type: date
                  description: 'opcional Fecha de fin de la afiliación.'
                  example: '2025-12-31'
                  nullable: true
                estado:
                  type: string
                  description: 'Estado de la afiliación.'
                  example: activo
                  nullable: false
              required:
                - paciente_id
                - aseguradora_id
                - fecha_inicio
                - estado
  '/api/afiliaciones/{id}':
    get:
      summary: "Grupo: Afiliacion\nObtiene una afiliación específica por su ID."
      operationId: grupoAfiliacionObtieneUnaAfiliacinEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  aseguradora_id: 1
                  fecha_inicio: '2025-01-01'
                  fecha_fin: '2025-12-31'
                  estado: activo
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  aseguradora_id:
                    type: integer
                    example: 1
                  fecha_inicio:
                    type: string
                    example: '2025-01-01'
                  fecha_fin:
                    type: string
                    example: '2025-12-31'
                  estado:
                    type: string
                    example: activo
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Afiliación no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Afiliación no encontrada'
      tags:
        - Endpoints
    put:
      summary: "Grupo: Afiliacion\nActualiza una afiliación existente."
      operationId: grupoAfiliacionActualizaUnaAfiliacinExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  aseguradora_id: 1
                  fecha_inicio: '2025-01-01'
                  fecha_fin: '2025-12-31'
                  estado: activo
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  aseguradora_id:
                    type: integer
                    example: 1
                  fecha_inicio:
                    type: string
                    example: '2025-01-01'
                  fecha_fin:
                    type: string
                    example: '2025-12-31'
                  estado:
                    type: string
                    example: activo
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Afiliación no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Afiliación no encontrada'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'opcional ID del paciente.'
                  example: 1
                  nullable: false
                aseguradora_id:
                  type: integer
                  description: 'opcional ID de la aseguradora.'
                  example: 1
                  nullable: false
                fecha_inicio:
                  type: date
                  description: 'opcional Fecha de inicio de la afiliación.'
                  example: '2025-01-01'
                  nullable: false
                fecha_fin:
                  type: date
                  description: 'opcional Fecha de fin de la afiliación.'
                  example: '2025-12-31'
                  nullable: true
                estado:
                  type: string
                  description: 'opcional Estado de la afiliación.'
                  example: activo
                  nullable: false
    delete:
      summary: "Grupo: Afiliacion\nElimina una afiliación existente."
      operationId: grupoAfiliacionEliminaUnaAfiliacinExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Afiliación eliminada'
                properties:
                  message:
                    type: string
                    example: 'Afiliación eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Afiliación no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Afiliación no encontrada'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'ID de la afiliación.'
        example: '1'
        required: true
        schema:
          type: string
  /api/especialidades:
    get:
      summary: 'Obtiene una lista de todas las especialidades.'
      operationId: obtieneUnaListaDeTodasLasEspecialidades
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: Cardiología
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: Cardiología
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: Cardiología
      tags:
        - Especialidad
      security: []
    post:
      summary: 'Crea una nueva especialidad.'
      operationId: creaUnaNuevaEspecialidad
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Cardiología
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Cardiología
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Especialidad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre de la especialidad.'
                  example: Cardiología
                  nullable: false
              required:
                - nombre
  '/api/especialidades/{id}':
    get:
      summary: 'Obtiene una especialidad específica por su ID.'
      operationId: obtieneUnaEspecialidadEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Cardiología
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Cardiología
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad no encontrada'
      tags:
        - Especialidad
      security: []
    put:
      summary: 'Actualiza una especialidad existente.'
      operationId: actualizaUnaEspecialidadExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Cardiología
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Cardiología
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad no encontrada'
      tags:
        - Especialidad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre de la especialidad.'
                  example: Cardiología
                  nullable: false
              required:
                - nombre
    delete:
      summary: 'Elimina una especialidad existente.'
      operationId: eliminaUnaEspecialidadExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad eliminada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad eliminada'
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'No se puede eliminar, hay citas asociadas.'
                properties:
                  error:
                    type: string
                    example: 'No se puede eliminar, hay citas asociadas.'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad no encontrada'
      tags:
        - Especialidad
    parameters:
      -
        in: path
        name: id
        description: 'ID de la especialidad.'
        example: '1'
        required: true
        schema:
          type: string
  /api/examenes-medicos:
    get:
      summary: 'Obtiene una lista de todos los exámenes médicos.'
      operationId: obtieneUnaListaDeTodosLosExmenesMdicos
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      laboratorio_id: 1
                      nombre: 'Examen de sangre'
                      descripcion: 'Análisis completo de sangre'
                      precio: 100.0
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        laboratorio_id: 1
                        nombre: 'Examen de sangre'
                        descripcion: 'Análisis completo de sangre'
                        precio: 100
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        laboratorio_id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Examen de sangre'
                        descripcion:
                          type: string
                          example: 'Análisis completo de sangre'
                        precio:
                          type: number
                          example: 100.0
      tags:
        - 'Examen Medico'
    post:
      summary: 'Crea un nuevo examen médico.'
      operationId: creaUnNuevoExamenMdico
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  laboratorio_id: 1
                  nombre: 'Examen de sangre'
                  descripcion: 'Análisis completo de sangre'
                  precio: 100.0
                properties:
                  id:
                    type: integer
                    example: 1
                  laboratorio_id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Examen de sangre'
                  descripcion:
                    type: string
                    example: 'Análisis completo de sangre'
                  precio:
                    type: number
                    example: 100.0
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - 'Examen Medico'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboratorio_id:
                  type: integer
                  description: 'ID del laboratorio.'
                  example: 1
                  nullable: false
                nombre:
                  type: string
                  description: 'Nombre del examen médico.'
                  example: 'Examen de sangre'
                  nullable: false
                descripcion:
                  type: string
                  description: 'opcional Descripción del examen médico.'
                  example: 'Análisis completo de sangre'
                  nullable: true
                precio:
                  type: numeric
                  description: 'Precio del examen médico.'
                  example: '100.00'
                  nullable: false
              required:
                - laboratorio_id
                - nombre
                - precio
  '/api/examenes-medicos/{id}':
    get:
      summary: 'Obtiene un examen médico específico por su ID.'
      operationId: obtieneUnExamenMdicoEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  laboratorio_id: 1
                  nombre: 'Examen de sangre'
                  descripcion: 'Análisis completo de sangre'
                  precio: 100.0
                properties:
                  id:
                    type: integer
                    example: 1
                  laboratorio_id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Examen de sangre'
                  descripcion:
                    type: string
                    example: 'Análisis completo de sangre'
                  precio:
                    type: number
                    example: 100.0
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Examen médico no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Examen médico no encontrado'
      tags:
        - 'Examen Medico'
    put:
      summary: 'Actualiza un examen médico existente.'
      operationId: actualizaUnExamenMdicoExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  laboratorio_id: 1
                  nombre: 'Examen de sangre'
                  descripcion: 'Análisis completo de sangre'
                  precio: 100.0
                properties:
                  id:
                    type: integer
                    example: 1
                  laboratorio_id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Examen de sangre'
                  descripcion:
                    type: string
                    example: 'Análisis completo de sangre'
                  precio:
                    type: number
                    example: 100.0
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Examen médico no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Examen médico no encontrado'
      tags:
        - 'Examen Medico'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                laboratorio_id:
                  type: integer
                  description: 'opcional ID del laboratorio.'
                  example: 1
                  nullable: false
                nombre:
                  type: string
                  description: 'opcional Nombre del examen médico.'
                  example: 'Examen de sangre'
                  nullable: false
                descripcion:
                  type: string
                  description: 'opcional Descripción del examen médico.'
                  example: 'Análisis completo de sangre'
                  nullable: true
                precio:
                  type: numeric
                  description: 'opcional Precio del examen médico.'
                  example: '100.00'
                  nullable: false
    delete:
      summary: 'Elimina un examen médico existente.'
      operationId: eliminaUnExamenMdicoExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Examen médico eliminado'
                properties:
                  message:
                    type: string
                    example: 'Examen médico eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Examen médico no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Examen médico no encontrado'
      tags:
        - 'Examen Medico'
    parameters:
      -
        in: path
        name: id
        description: 'ID del examen médico.'
        example: '1'
        required: true
        schema:
          type: string
  /api/facturas:
    get:
      summary: 'Obtiene una lista de todas las facturas.'
      operationId: obtieneUnaListaDeTodasLasFacturas
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      paciente_id: 1
                      cita_id: 1
                      monto_total: 150.0
                      fecha_emision: '2025-09-05'
                      estado: pagada
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        paciente_id: 1
                        cita_id: 1
                        monto_total: 150
                        fecha_emision: '2025-09-05'
                        estado: pagada
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        paciente_id:
                          type: integer
                          example: 1
                        cita_id:
                          type: integer
                          example: 1
                        monto_total:
                          type: number
                          example: 150.0
                        fecha_emision:
                          type: string
                          example: '2025-09-05'
                        estado:
                          type: string
                          example: pagada
      tags:
        - Factura
    post:
      summary: 'Crea una nueva factura.'
      operationId: creaUnaNuevaFactura
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  cita_id: 1
                  monto_total: 150.0
                  fecha_emision: '2025-09-05'
                  estado: pagada
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  cita_id:
                    type: integer
                    example: 1
                  monto_total:
                    type: number
                    example: 150.0
                  fecha_emision:
                    type: string
                    example: '2025-09-05'
                  estado:
                    type: string
                    example: pagada
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Factura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'ID del paciente.'
                  example: 1
                  nullable: false
                cita_id:
                  type: integer
                  description: 'ID de la cita.'
                  example: 1
                  nullable: false
                monto_total:
                  type: numeric
                  description: 'Monto total de la factura.'
                  example: '150.00'
                  nullable: false
                fecha_emision:
                  type: date
                  description: 'Fecha de emisión de la factura.'
                  example: '2025-09-05'
                  nullable: false
                estado:
                  type: string
                  description: 'Estado de la factura.'
                  example: pagada
                  nullable: false
              required:
                - paciente_id
                - cita_id
                - monto_total
                - fecha_emision
                - estado
  '/api/facturas/{id}':
    get:
      summary: 'Obtiene una factura específica por su ID.'
      operationId: obtieneUnaFacturaEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  cita_id: 1
                  monto_total: 150.0
                  fecha_emision: '2025-09-05'
                  estado: pagada
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  cita_id:
                    type: integer
                    example: 1
                  monto_total:
                    type: number
                    example: 150.0
                  fecha_emision:
                    type: string
                    example: '2025-09-05'
                  estado:
                    type: string
                    example: pagada
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Factura no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Factura no encontrada'
      tags:
        - Factura
    put:
      summary: 'Actualiza una factura existente.'
      operationId: actualizaUnaFacturaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  cita_id: 1
                  monto_total: 150.0
                  fecha_emision: '2025-09-05'
                  estado: pagada
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  cita_id:
                    type: integer
                    example: 1
                  monto_total:
                    type: number
                    example: 150.0
                  fecha_emision:
                    type: string
                    example: '2025-09-05'
                  estado:
                    type: string
                    example: pagada
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Factura no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Factura no encontrada'
      tags:
        - Factura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'opcional ID del paciente.'
                  example: 1
                  nullable: false
                cita_id:
                  type: integer
                  description: 'opcional ID de la cita.'
                  example: 1
                  nullable: false
                monto_total:
                  type: numeric
                  description: 'Monto total de la factura.'
                  example: '150.00'
                  nullable: false
                fecha_emision:
                  type: date
                  description: 'opcional Fecha de emisión de la factura.'
                  example: '2025-09-05'
                  nullable: false
                estado:
                  type: string
                  description: 'Estado de la factura.'
                  example: pagada
                  nullable: false
              required:
                - monto_total
                - estado
    delete:
      summary: 'Elimina una factura existente.'
      operationId: eliminaUnaFacturaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Factura eliminada'
                properties:
                  message:
                    type: string
                    example: 'Factura eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Factura no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Factura no encontrada'
      tags:
        - Factura
    parameters:
      -
        in: path
        name: id
        description: 'ID de la factura.'
        example: '1'
        required: true
        schema:
          type: string
  /api/historias-clinicas:
    get:
      summary: 'Obtiene una lista de todas las historias clínicas.'
      operationId: obtieneUnaListaDeTodasLasHistoriasClnicas
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      paciente_id: 1
                      antecedentes: 'Historial de hipertensión'
                      alergias: Penicilina
                      observaciones: 'Paciente estable'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        paciente_id: 1
                        antecedentes: 'Historial de hipertensión'
                        alergias: Penicilina
                        observaciones: 'Paciente estable'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        paciente_id:
                          type: integer
                          example: 1
                        antecedentes:
                          type: string
                          example: 'Historial de hipertensión'
                        alergias:
                          type: string
                          example: Penicilina
                        observaciones:
                          type: string
                          example: 'Paciente estable'
      tags:
        - 'Historia Clinica'
    post:
      summary: 'Crea una nueva historia clínica.'
      operationId: creaUnaNuevaHistoriaClnica
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  antecedentes: 'Historial de hipertensión'
                  alergias: Penicilina
                  observaciones: 'Paciente estable'
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  antecedentes:
                    type: string
                    example: 'Historial de hipertensión'
                  alergias:
                    type: string
                    example: Penicilina
                  observaciones:
                    type: string
                    example: 'Paciente estable'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - 'Historia Clinica'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'ID del paciente.'
                  example: 1
                  nullable: false
                antecedentes:
                  type: string
                  description: 'opcional Antecedentes médicos del paciente.'
                  example: 'Historial de hipertensión'
                  nullable: true
                alergias:
                  type: string
                  description: 'opcional Alergias del paciente.'
                  example: Penicilina
                  nullable: true
                observaciones:
                  type: string
                  description: 'opcional Observaciones generales.'
                  example: 'Paciente estable'
                  nullable: true
              required:
                - paciente_id
  '/api/historias-clinicas/{id}':
    get:
      summary: 'Obtiene una historia clínica específica por su ID.'
      operationId: obtieneUnaHistoriaClnicaEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  antecedentes: 'Historial de hipertensión'
                  alergias: Penicilina
                  observaciones: 'Paciente estable'
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  antecedentes:
                    type: string
                    example: 'Historial de hipertensión'
                  alergias:
                    type: string
                    example: Penicilina
                  observaciones:
                    type: string
                    example: 'Paciente estable'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Historia clínica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Historia clínica no encontrada'
      tags:
        - 'Historia Clinica'
    put:
      summary: 'Actualiza una historia clínica existente.'
      operationId: actualizaUnaHistoriaClnicaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  paciente_id: 1
                  antecedentes: 'Historial de hipertensión'
                  alergias: Penicilina
                  observaciones: 'Paciente estable'
                properties:
                  id:
                    type: integer
                    example: 1
                  paciente_id:
                    type: integer
                    example: 1
                  antecedentes:
                    type: string
                    example: 'Historial de hipertensión'
                  alergias:
                    type: string
                    example: Penicilina
                  observaciones:
                    type: string
                    example: 'Paciente estable'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Historia clínica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Historia clínica no encontrada'
      tags:
        - 'Historia Clinica'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente_id:
                  type: integer
                  description: 'opcional ID del paciente.'
                  example: 1
                  nullable: false
                antecedentes:
                  type: string
                  description: 'opcional Antecedentes médicos del paciente.'
                  example: 'Historial de hipertensión'
                  nullable: true
                alergias:
                  type: string
                  description: 'opcional Alergias del paciente.'
                  example: Penicilina
                  nullable: true
                observaciones:
                  type: string
                  description: 'opcional Observaciones generales.'
                  example: 'Paciente estable'
                  nullable: true
    delete:
      summary: 'Elimina una historia clínica existente.'
      operationId: eliminaUnaHistoriaClnicaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Historia clínica eliminada'
                properties:
                  message:
                    type: string
                    example: 'Historia clínica eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Historia clínica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Historia clínica no encontrada'
      tags:
        - 'Historia Clinica'
    parameters:
      -
        in: path
        name: id
        description: 'ID de la historia clínica.'
        example: '1'
        required: true
        schema:
          type: string
  /api/horarios:
    get:
      summary: 'Obtiene una lista de todos los horarios.'
      operationId: obtieneUnaListaDeTodosLosHorarios
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      medico_id: 1
                      dia_semana: Lunes
                      hora_inicio: '08:00'
                      hora_fin: '17:00'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        medico_id: 1
                        dia_semana: Lunes
                        hora_inicio: '08:00'
                        hora_fin: '17:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        medico_id:
                          type: integer
                          example: 1
                        dia_semana:
                          type: string
                          example: Lunes
                        hora_inicio:
                          type: string
                          example: '08:00'
                        hora_fin:
                          type: string
                          example: '17:00'
      tags:
        - Horario
    post:
      summary: 'Crea un nuevo horario.'
      operationId: creaUnNuevoHorario
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  medico_id: 1
                  dia_semana: Lunes
                  hora_inicio: '08:00'
                  hora_fin: '17:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  medico_id:
                    type: integer
                    example: 1
                  dia_semana:
                    type: string
                    example: Lunes
                  hora_inicio:
                    type: string
                    example: '08:00'
                  hora_fin:
                    type: string
                    example: '17:00'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Horario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medico_id:
                  type: integer
                  description: 'ID del médico.'
                  example: 1
                  nullable: false
                dia_semana:
                  type: string
                  description: 'Día de la semana.'
                  example: Lunes
                  nullable: false
                hora_inicio:
                  type: string
                  description: 'Hora de inicio en formato HH:mm.'
                  example: '08:00'
                  nullable: false
                hora_fin:
                  type: string
                  description: 'Hora de fin en formato HH:mm.'
                  example: '17:00'
                  nullable: false
              required:
                - medico_id
                - dia_semana
                - hora_inicio
                - hora_fin
  '/api/horarios/{id}':
    get:
      summary: 'Obtiene un horario específico por su ID.'
      operationId: obtieneUnHorarioEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  medico_id: 1
                  dia_semana: Lunes
                  hora_inicio: '08:00'
                  hora_fin: '17:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  medico_id:
                    type: integer
                    example: 1
                  dia_semana:
                    type: string
                    example: Lunes
                  hora_inicio:
                    type: string
                    example: '08:00'
                  hora_fin:
                    type: string
                    example: '17:00'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Horario no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Horario no encontrado'
      tags:
        - Horario
    put:
      summary: 'Actualiza un horario existente.'
      operationId: actualizaUnHorarioExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  medico_id: 1
                  dia_semana: Lunes
                  hora_inicio: '08:00'
                  hora_fin: '17:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  medico_id:
                    type: integer
                    example: 1
                  dia_semana:
                    type: string
                    example: Lunes
                  hora_inicio:
                    type: string
                    example: '08:00'
                  hora_fin:
                    type: string
                    example: '17:00'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Horario no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Horario no encontrado'
      tags:
        - Horario
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                medico_id:
                  type: integer
                  description: 'opcional ID del médico.'
                  example: 1
                  nullable: false
                dia_semana:
                  type: string
                  description: 'opcional Día de la semana.'
                  example: Lunes
                  nullable: false
                hora_inicio:
                  type: string
                  description: 'opcional Hora de inicio en formato HH:mm.'
                  example: '08:00'
                  nullable: false
                hora_fin:
                  type: string
                  description: 'opcional Hora de fin en formato HH:mm.'
                  example: '17:00'
                  nullable: false
    delete:
      summary: 'Elimina un horario existente.'
      operationId: eliminaUnHorarioExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Horario eliminado'
                properties:
                  message:
                    type: string
                    example: 'Horario eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Horario no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Horario no encontrado'
      tags:
        - Horario
    parameters:
      -
        in: path
        name: id
        description: 'ID del horario.'
        example: '1'
        required: true
        schema:
          type: string
  /api/laboratorios:
    get:
      summary: 'Obtiene una lista de todos los laboratorios.'
      operationId: obtieneUnaListaDeTodosLosLaboratorios
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: 'Laboratorio Central'
                      direccion: 'Calle Principal 123'
                      telefono: 555-0123
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: 'Laboratorio Central'
                        direccion: 'Calle Principal 123'
                        telefono: 555-0123
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Laboratorio Central'
                        direccion:
                          type: string
                          example: 'Calle Principal 123'
                        telefono:
                          type: string
                          example: 555-0123
      tags:
        - Laboratorio
    post:
      summary: 'Crea un nuevo laboratorio.'
      operationId: creaUnNuevoLaboratorio
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Laboratorio Central'
                  direccion: 'Calle Principal 123'
                  telefono: 555-0123
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Laboratorio Central'
                  direccion:
                    type: string
                    example: 'Calle Principal 123'
                  telefono:
                    type: string
                    example: 555-0123
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Laboratorio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre del laboratorio.'
                  example: 'Laboratorio Central'
                  nullable: false
                direccion:
                  type: string
                  description: 'opcional Dirección del laboratorio.'
                  example: 'Calle Principal 123'
                  nullable: true
                telefono:
                  type: string
                  description: 'opcional Teléfono del laboratorio.'
                  example: 555-0123
                  nullable: true
              required:
                - nombre
  '/api/laboratorios/{id}':
    get:
      summary: 'Obtiene un laboratorio específico por su ID.'
      operationId: obtieneUnLaboratorioEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Laboratorio Central'
                  direccion: 'Calle Principal 123'
                  telefono: 555-0123
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Laboratorio Central'
                  direccion:
                    type: string
                    example: 'Calle Principal 123'
                  telefono:
                    type: string
                    example: 555-0123
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Laboratorio no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Laboratorio no encontrado'
      tags:
        - Laboratorio
    put:
      summary: 'Actualiza un laboratorio existente.'
      operationId: actualizaUnLaboratorioExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Laboratorio Central'
                  direccion: 'Calle Principal 123'
                  telefono: 555-0123
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Laboratorio Central'
                  direccion:
                    type: string
                    example: 'Calle Principal 123'
                  telefono:
                    type: string
                    example: 555-0123
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Laboratorio no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Laboratorio no encontrado'
      tags:
        - Laboratorio
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'opcional Nombre del laboratorio.'
                  example: 'Laboratorio Central'
                  nullable: false
                direccion:
                  type: string
                  description: 'opcional Dirección del laboratorio.'
                  example: 'Calle Principal 123'
                  nullable: true
                telefono:
                  type: string
                  description: 'opcional Teléfono del laboratorio.'
                  example: 555-0123
                  nullable: true
    delete:
      summary: 'Elimina un laboratorio existente.'
      operationId: eliminaUnLaboratorioExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Laboratorio eliminado'
                properties:
                  message:
                    type: string
                    example: 'Laboratorio eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Laboratorio no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Laboratorio no encontrado'
      tags:
        - Laboratorio
    parameters:
      -
        in: path
        name: id
        description: 'ID del laboratorio.'
        example: '1'
        required: true
        schema:
          type: string
  /api/medicamentos:
    get:
      summary: 'Listar todos los medicamentos'
      operationId: listarTodosLosMedicamentos
      description: 'Obtiene una lista de todos los medicamentos registrados en el sistema.'
      parameters: []
      responses:
        200:
          description: Éxito
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: Paracetamol
                      descripcion: 'Analgésico y antipirético'
                      dosis: 500mg
                      presentacion: Tabletas
                      created_at: '2025-09-05T12:00:00.000000Z'
                      updated_at: '2025-09-05T12:00:00.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: Paracetamol
                        descripcion: 'Analgésico y antipirético'
                        dosis: 500mg
                        presentacion: Tabletas
                        created_at: '2025-09-05T12:00:00.000000Z'
                        updated_at: '2025-09-05T12:00:00.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: Paracetamol
                        descripcion:
                          type: string
                          example: 'Analgésico y antipirético'
                        dosis:
                          type: string
                          example: 500mg
                        presentacion:
                          type: string
                          example: Tabletas
                        created_at:
                          type: string
                          example: '2025-09-05T12:00:00.000000Z'
                        updated_at:
                          type: string
                          example: '2025-09-05T12:00:00.000000Z'
      tags:
        - Medicamento
    post:
      summary: 'Crear nuevo medicamento'
      operationId: crearNuevoMedicamento
      description: 'Registra un nuevo medicamento en el sistema.'
      parameters: []
      responses:
        200:
          description: Éxito
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Paracetamol
                  descripcion: 'Analgésico y antipirético'
                  dosis: 500mg
                  presentacion: Tabletas
                  created_at: '2025-09-05T12:00:00.000000Z'
                  updated_at: '2025-09-05T12:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Paracetamol
                  descripcion:
                    type: string
                    example: 'Analgésico y antipirético'
                  dosis:
                    type: string
                    example: 500mg
                  presentacion:
                    type: string
                    example: Tabletas
                  created_at:
                    type: string
                    example: '2025-09-05T12:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2025-09-05T12:00:00.000000Z'
        400:
          description: 'Error de validación'
          content:
            application/json:
              schema:
                type: object
                example:
                  nombre:
                    - 'El campo nombre es obligatorio'
                properties:
                  nombre:
                    type: array
                    example:
                      - 'El campo nombre es obligatorio'
                    items:
                      type: string
      tags:
        - Medicamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre del medicamento.'
                  example: Paracetamol
                  nullable: false
                descripcion:
                  type: string
                  description: 'Descripción del medicamento.'
                  example: 'Analgésico y antipirético'
                  nullable: true
                dosis:
                  type: string
                  description: 'Dosis recomendada del medicamento.'
                  example: 500mg
                  nullable: true
                presentacion:
                  type: string
                  description: 'Presentación del medicamento.'
                  example: Tabletas
                  nullable: true
              required:
                - nombre
  '/api/medicamentos/{id}':
    get:
      summary: 'Obtener medicamento específico'
      operationId: obtenerMedicamentoEspecfico
      description: 'Muestra la información detallada de un medicamento específico.'
      parameters: []
      responses:
        200:
          description: Éxito
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Paracetamol
                  descripcion: 'Analgésico y antipirético'
                  dosis: 500mg
                  presentacion: Tabletas
                  created_at: '2025-09-05T12:00:00.000000Z'
                  updated_at: '2025-09-05T12:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Paracetamol
                  descripcion:
                    type: string
                    example: 'Analgésico y antipirético'
                  dosis:
                    type: string
                    example: 500mg
                  presentacion:
                    type: string
                    example: Tabletas
                  created_at:
                    type: string
                    example: '2025-09-05T12:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2025-09-05T12:00:00.000000Z'
        404:
          description: 'No encontrado'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Medicamento].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Medicamento].'
      tags:
        - Medicamento
    put:
      summary: 'Actualizar medicamento'
      operationId: actualizarMedicamento
      description: 'Actualiza la información de un medicamento existente.'
      parameters: []
      responses:
        200:
          description: Éxito
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Paracetamol
                  descripcion: 'Analgésico y antipirético actualizado'
                  dosis: 500mg
                  presentacion: Tabletas
                  created_at: '2025-09-05T12:00:00.000000Z'
                  updated_at: '2025-09-05T12:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Paracetamol
                  descripcion:
                    type: string
                    example: 'Analgésico y antipirético actualizado'
                  dosis:
                    type: string
                    example: 500mg
                  presentacion:
                    type: string
                    example: Tabletas
                  created_at:
                    type: string
                    example: '2025-09-05T12:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2025-09-05T12:00:00.000000Z'
        400:
          description: 'Error de validación'
          content:
            application/json:
              schema:
                type: object
                example:
                  nombre:
                    - 'El formato del nombre es inválido'
                properties:
                  nombre:
                    type: array
                    example:
                      - 'El formato del nombre es inválido'
                    items:
                      type: string
        404:
          description: 'No encontrado'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Medicamento].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Medicamento].'
      tags:
        - Medicamento
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre del medicamento.'
                  example: Paracetamol
                  nullable: false
                descripcion:
                  type: string
                  description: 'Descripción del medicamento.'
                  example: 'Analgésico y antipirético'
                  nullable: true
                dosis:
                  type: string
                  description: 'Dosis recomendada del medicamento.'
                  example: 500mg
                  nullable: true
                presentacion:
                  type: string
                  description: 'Presentación del medicamento.'
                  example: Tabletas
                  nullable: true
    delete:
      summary: 'Eliminar medicamento'
      operationId: eliminarMedicamento
      description: 'Elimina un medicamento específico del sistema.'
      parameters: []
      responses:
        200:
          description: Éxito
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Medicamento eliminado'
                properties:
                  message:
                    type: string
                    example: 'Medicamento eliminado'
        404:
          description: 'No encontrado'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Medicamento].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Medicamento].'
      tags:
        - Medicamento
    parameters:
      -
        in: path
        name: id
        description: 'El ID del medicamento.'
        example: '1'
        required: true
        schema:
          type: string
  /api/medicos:
    get:
      summary: 'Obtiene una lista de todos los médicos.'
      operationId: obtieneUnaListaDeTodosLosMdicos
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: 'Dr. Juan Pérez'
                      documento: '12345678'
                      telefono: '1234567890'
                      email: juan.perez@example.com
                      especialidad_id: 1
                      ciudad_id: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: 'Dr. Juan Pérez'
                        documento: '12345678'
                        telefono: '1234567890'
                        email: juan.perez@example.com
                        especialidad_id: 1
                        ciudad_id: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Dr. Juan Pérez'
                        documento:
                          type: string
                          example: '12345678'
                        telefono:
                          type: string
                          example: '1234567890'
                        email:
                          type: string
                          example: juan.perez@example.com
                        especialidad_id:
                          type: integer
                          example: 1
                        ciudad_id:
                          type: integer
                          example: 1
      tags:
        - Medico
    post:
      summary: 'Crea un nuevo médico.'
      operationId: creaUnNuevoMdico
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Dr. Juan Pérez'
                  documento: '12345678'
                  telefono: '1234567890'
                  email: juan.perez@example.com
                  especialidad_id: 1
                  ciudad_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Dr. Juan Pérez'
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: juan.perez@example.com
                  especialidad_id:
                    type: integer
                    example: 1
                  ciudad_id:
                    type: integer
                    example: 1
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Medico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre del médico.'
                  example: 'Dr. Juan Pérez'
                  nullable: false
                documento:
                  type: string
                  description: 'Número de documento del médico.'
                  example: '12345678'
                  nullable: false
                telefono:
                  type: string
                  description: 'opcional Número de teléfono del médico.'
                  example: '1234567890'
                  nullable: true
                email:
                  type: string
                  description: 'opcional Correo electrónico del médico.'
                  example: juan.perez@example.com
                  nullable: true
                especialidad_id:
                  type: integer
                  description: 'ID de la especialidad.'
                  example: 1
                  nullable: false
                ciudad_id:
                  type: integer
                  description: 'ID de la ciudad.'
                  example: 1
                  nullable: false
              required:
                - nombre
                - documento
                - especialidad_id
                - ciudad_id
  '/api/medicos/{id}':
    get:
      summary: 'Obtiene un médico específico por su ID.'
      operationId: obtieneUnMdicoEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Dr. Juan Pérez'
                  documento: '12345678'
                  telefono: '1234567890'
                  email: juan.perez@example.com
                  especialidad_id: 1
                  ciudad_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Dr. Juan Pérez'
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: juan.perez@example.com
                  especialidad_id:
                    type: integer
                    example: 1
                  ciudad_id:
                    type: integer
                    example: 1
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Médico no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Médico no encontrado'
      tags:
        - Medico
    put:
      summary: 'Actualiza un médico existente.'
      operationId: actualizaUnMdicoExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Dr. Juan Pérez'
                  documento: '12345678'
                  telefono: '1234567890'
                  email: juan.perez@example.com
                  especialidad_id: 1
                  ciudad_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Dr. Juan Pérez'
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: juan.perez@example.com
                  especialidad_id:
                    type: integer
                    example: 1
                  ciudad_id:
                    type: integer
                    example: 1
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Médico no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Médico no encontrado'
      tags:
        - Medico
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'opcional Nombre del médico.'
                  example: 'Dr. Juan Pérez'
                  nullable: false
                documento:
                  type: string
                  description: 'opcional Número de documento del médico.'
                  example: '12345678'
                  nullable: false
                telefono:
                  type: string
                  description: 'opcional Número de teléfono del médico.'
                  example: '1234567890'
                  nullable: true
                email:
                  type: string
                  description: 'opcional Correo electrónico del médico.'
                  example: juan.perez@example.com
                  nullable: true
                especialidad_id:
                  type: integer
                  description: 'opcional ID de la especialidad.'
                  example: 1
                  nullable: false
                ciudad_id:
                  type: integer
                  description: 'opcional ID de la ciudad.'
                  example: 1
                  nullable: false
    delete:
      summary: 'Elimina un médico existente.'
      operationId: eliminaUnMdicoExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Médico eliminado'
                properties:
                  message:
                    type: string
                    example: 'Médico eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Médico no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Médico no encontrado'
      tags:
        - Medico
    parameters:
      -
        in: path
        name: id
        description: 'ID del médico.'
        example: '1'
        required: true
        schema:
          type: string
  /api/ordenes-examenes:
    get:
      summary: 'Obtiene una lista de todas las órdenes de examen.'
      operationId: obtieneUnaListaDeTodasLasrdenesDeExamen
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      consulta_medica_id: 1
                      examen_medico_id: 1
                      fecha_solicitud: '2025-01-01'
                      resultado: 'Resultado del examen'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        consulta_medica_id: 1
                        examen_medico_id: 1
                        fecha_solicitud: '2025-01-01'
                        resultado: 'Resultado del examen'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        consulta_medica_id:
                          type: integer
                          example: 1
                        examen_medico_id:
                          type: integer
                          example: 1
                        fecha_solicitud:
                          type: string
                          example: '2025-01-01'
                        resultado:
                          type: string
                          example: 'Resultado del examen'
      tags:
        - 'Orden Examen'
    post:
      summary: 'Crea una nueva orden de examen.'
      operationId: creaUnaNuevaOrdenDeExamen
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  consulta_medica_id: 1
                  examen_medico_id: 1
                  fecha_solicitud: '2025-01-01'
                  resultado: 'Resultado del examen'
                properties:
                  id:
                    type: integer
                    example: 1
                  consulta_medica_id:
                    type: integer
                    example: 1
                  examen_medico_id:
                    type: integer
                    example: 1
                  fecha_solicitud:
                    type: string
                    example: '2025-01-01'
                  resultado:
                    type: string
                    example: 'Resultado del examen'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - 'Orden Examen'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                consulta_medica_id:
                  type: integer
                  description: 'ID de la consulta médica.'
                  example: 1
                  nullable: false
                examen_medico_id:
                  type: integer
                  description: 'ID del examen médico.'
                  example: 1
                  nullable: false
                fecha_solicitud:
                  type: date
                  description: 'Fecha de solicitud del examen.'
                  example: '2025-01-01'
                  nullable: false
                resultado:
                  type: string
                  description: 'opcional Resultado del examen.'
                  example: 'Resultado del examen'
                  nullable: true
              required:
                - consulta_medica_id
                - examen_medico_id
                - fecha_solicitud
  '/api/ordenes-examenes/{id}':
    get:
      summary: 'Obtiene una orden de examen específica por su ID.'
      operationId: obtieneUnaOrdenDeExamenEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  consulta_medica_id: 1
                  examen_medico_id: 1
                  fecha_solicitud: '2025-01-01'
                  resultado: 'Resultado del examen'
                properties:
                  id:
                    type: integer
                    example: 1
                  consulta_medica_id:
                    type: integer
                    example: 1
                  examen_medico_id:
                    type: integer
                    example: 1
                  fecha_solicitud:
                    type: string
                    example: '2025-01-01'
                  resultado:
                    type: string
                    example: 'Resultado del examen'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Orden de examen no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Orden de examen no encontrada'
      tags:
        - 'Orden Examen'
    put:
      summary: 'Actualiza una orden de examen existente.'
      operationId: actualizaUnaOrdenDeExamenExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  consulta_medica_id: 1
                  examen_medico_id: 1
                  fecha_solicitud: '2025-01-01'
                  resultado: 'Resultado del examen'
                properties:
                  id:
                    type: integer
                    example: 1
                  consulta_medica_id:
                    type: integer
                    example: 1
                  examen_medico_id:
                    type: integer
                    example: 1
                  fecha_solicitud:
                    type: string
                    example: '2025-01-01'
                  resultado:
                    type: string
                    example: 'Resultado del examen'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Orden de examen no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Orden de examen no encontrada'
      tags:
        - 'Orden Examen'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                consulta_medica_id:
                  type: integer
                  description: 'opcional ID de la consulta médica.'
                  example: 1
                  nullable: false
                examen_medico_id:
                  type: integer
                  description: 'opcional ID del examen médico.'
                  example: 1
                  nullable: false
                fecha_solicitud:
                  type: date
                  description: 'opcional Fecha de solicitud del examen.'
                  example: '2025-01-01'
                  nullable: false
                resultado:
                  type: string
                  description: 'opcional Resultado del examen.'
                  example: 'Resultado del examen'
                  nullable: true
    delete:
      summary: 'Elimina una orden de examen existente.'
      operationId: eliminaUnaOrdenDeExamenExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Orden de examen eliminada'
                properties:
                  message:
                    type: string
                    example: 'Orden de examen eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Orden de examen no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Orden de examen no encontrada'
      tags:
        - 'Orden Examen'
    parameters:
      -
        in: path
        name: id
        description: 'ID de la orden de examen.'
        example: '1'
        required: true
        schema:
          type: string
  /api/pacientes:
    get:
      summary: 'Obtiene una lista de todos los pacientes.'
      operationId: obtieneUnaListaDeTodosLosPacientes
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      nombre: 'John Doe'
                      documento: '12345678'
                      telefono: '1234567890'
                      email: john@example.com
                      ciudad_id: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: 'John Doe'
                        documento: '12345678'
                        telefono: '1234567890'
                        email: john@example.com
                        ciudad_id: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'John Doe'
                        documento:
                          type: string
                          example: '12345678'
                        telefono:
                          type: string
                          example: '1234567890'
                        email:
                          type: string
                          example: john@example.com
                        ciudad_id:
                          type: integer
                          example: 1
      tags:
        - Paciente
    post:
      summary: 'Crea un nuevo paciente.'
      operationId: creaUnNuevoPaciente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'John Doe'
                  documento: '12345678'
                  telefono: '1234567890'
                  email: john@example.com
                  ciudad_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'John Doe'
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: john@example.com
                  ciudad_id:
                    type: integer
                    example: 1
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre del paciente.'
                  example: 'John Doe'
                  nullable: false
                documento:
                  type: string
                  description: 'Número de documento del paciente.'
                  example: '12345678'
                  nullable: false
                telefono:
                  type: string
                  description: 'opcional Número de teléfono del paciente.'
                  example: '1234567890'
                  nullable: true
                email:
                  type: string
                  description: 'opcional Correo electrónico del paciente.'
                  example: john@example.com
                  nullable: true
                ciudad_id:
                  type: integer
                  description: 'ID de la ciudad del paciente.'
                  example: 1
                  nullable: false
              required:
                - nombre
                - documento
                - ciudad_id
  '/api/pacientes/{id}':
    get:
      summary: 'Obtiene un paciente específico por su ID.'
      operationId: obtieneUnPacienteEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'John Doe'
                  documento: '12345678'
                  telefono: '1234567890'
                  email: john@example.com
                  ciudad_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'John Doe'
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: john@example.com
                  ciudad_id:
                    type: integer
                    example: 1
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - Paciente
    put:
      summary: 'Actualiza un paciente existente.'
      operationId: actualizaUnPacienteExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'John Doe'
                  documento: '12345678'
                  telefono: '1234567890'
                  email: john@example.com
                  ciudad_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'John Doe'
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '1234567890'
                  email:
                    type: string
                    example: john@example.com
                  ciudad_id:
                    type: integer
                    example: 1
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - Paciente
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'opcional Nombre del paciente.'
                  example: 'John Doe'
                  nullable: false
                documento:
                  type: string
                  description: 'opcional Número de documento del paciente.'
                  example: '12345678'
                  nullable: false
                telefono:
                  type: string
                  description: 'opcional Número de teléfono del paciente.'
                  example: '1234567890'
                  nullable: true
                email:
                  type: string
                  description: 'opcional Correo electrónico del paciente.'
                  example: john@example.com
                  nullable: false
                ciudad_id:
                  type: integer
                  description: 'opcional ID de la ciudad del paciente.'
                  example: 1
                  nullable: false
    delete:
      summary: 'Elimina un paciente existente.'
      operationId: eliminaUnPacienteExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente eliminado'
                properties:
                  message:
                    type: string
                    example: 'Paciente eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - Paciente
    parameters:
      -
        in: path
        name: id
        description: 'ID del paciente.'
        example: '1'
        required: true
        schema:
          type: string
  /api/pagos:
    get:
      summary: 'Obtiene una lista de todos los pagos.'
      operationId: obtieneUnaListaDeTodosLosPagos
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      factura_id: 1
                      fecha_pago: '2025-01-01'
                      monto: 100.0
                      metodo_pago: tarjeta
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        factura_id: 1
                        fecha_pago: '2025-01-01'
                        monto: 100
                        metodo_pago: tarjeta
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        factura_id:
                          type: integer
                          example: 1
                        fecha_pago:
                          type: string
                          example: '2025-01-01'
                        monto:
                          type: number
                          example: 100.0
                        metodo_pago:
                          type: string
                          example: tarjeta
      tags:
        - Pago
    post:
      summary: 'Crea un nuevo pago.'
      operationId: creaUnNuevoPago
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  factura_id: 1
                  fecha_pago: '2025-01-01'
                  monto: 100.0
                  metodo_pago: tarjeta
                properties:
                  id:
                    type: integer
                    example: 1
                  factura_id:
                    type: integer
                    example: 1
                  fecha_pago:
                    type: string
                    example: '2025-01-01'
                  monto:
                    type: number
                    example: 100.0
                  metodo_pago:
                    type: string
                    example: tarjeta
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - Pago
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                factura_id:
                  type: integer
                  description: 'ID de la factura.'
                  example: 1
                  nullable: false
                fecha_pago:
                  type: date
                  description: 'Fecha del pago.'
                  example: '2025-01-01'
                  nullable: false
                monto:
                  type: numeric
                  description: 'Monto del pago.'
                  example: '100.00'
                  nullable: false
                metodo_pago:
                  type: string
                  description: 'Método de pago utilizado.'
                  example: tarjeta
                  nullable: false
              required:
                - factura_id
                - fecha_pago
                - monto
                - metodo_pago
  '/api/pagos/{id}':
    get:
      summary: 'Obtiene un pago específico por su ID.'
      operationId: obtieneUnPagoEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  factura_id: 1
                  fecha_pago: '2025-01-01'
                  monto: 100.0
                  metodo_pago: tarjeta
                properties:
                  id:
                    type: integer
                    example: 1
                  factura_id:
                    type: integer
                    example: 1
                  fecha_pago:
                    type: string
                    example: '2025-01-01'
                  monto:
                    type: number
                    example: 100.0
                  metodo_pago:
                    type: string
                    example: tarjeta
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pago no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Pago no encontrado'
      tags:
        - Pago
    put:
      summary: 'Actualiza un pago existente.'
      operationId: actualizaUnPagoExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  factura_id: 1
                  fecha_pago: '2025-01-01'
                  monto: 100.0
                  metodo_pago: tarjeta
                properties:
                  id:
                    type: integer
                    example: 1
                  factura_id:
                    type: integer
                    example: 1
                  fecha_pago:
                    type: string
                    example: '2025-01-01'
                  monto:
                    type: number
                    example: 100.0
                  metodo_pago:
                    type: string
                    example: tarjeta
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pago no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Pago no encontrado'
      tags:
        - Pago
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                factura_id:
                  type: integer
                  description: 'opcional ID de la factura.'
                  example: 1
                  nullable: false
                fecha_pago:
                  type: date
                  description: 'opcional Fecha del pago.'
                  example: '2025-01-01'
                  nullable: false
                monto:
                  type: numeric
                  description: 'opcional Monto del pago.'
                  example: '100.00'
                  nullable: false
                metodo_pago:
                  type: string
                  description: 'opcional Método de pago utilizado.'
                  example: tarjeta
                  nullable: false
    delete:
      summary: 'Elimina un pago existente.'
      operationId: eliminaUnPagoExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pago eliminado'
                properties:
                  message:
                    type: string
                    example: 'Pago eliminado'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pago no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Pago no encontrado'
      tags:
        - Pago
    parameters:
      -
        in: path
        name: id
        description: 'ID del pago.'
        example: '1'
        required: true
        schema:
          type: string
  /api/recetas-medicas:
    get:
      summary: 'Obtiene una lista de todas las recetas médicas.'
      operationId: obtieneUnaListaDeTodasLasRecetasMdicas
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      consulta_medica_id: 1
                      fecha: '2025-01-01'
                      indicaciones: 'Tomar medicamento cada 8 horas'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        consulta_medica_id: 1
                        fecha: '2025-01-01'
                        indicaciones: 'Tomar medicamento cada 8 horas'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        consulta_medica_id:
                          type: integer
                          example: 1
                        fecha:
                          type: string
                          example: '2025-01-01'
                        indicaciones:
                          type: string
                          example: 'Tomar medicamento cada 8 horas'
      tags:
        - 'Receta Medica'
    post:
      summary: 'Crea una nueva receta médica.'
      operationId: creaUnaNuevaRecetaMdica
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  consulta_medica_id: 1
                  fecha: '2025-01-01'
                  indicaciones: 'Tomar medicamento cada 8 horas'
                properties:
                  id:
                    type: integer
                    example: 1
                  consulta_medica_id:
                    type: integer
                    example: 1
                  fecha:
                    type: string
                    example: '2025-01-01'
                  indicaciones:
                    type: string
                    example: 'Tomar medicamento cada 8 horas'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
      tags:
        - 'Receta Medica'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                consulta_medica_id:
                  type: integer
                  description: 'ID de la consulta médica.'
                  example: 1
                  nullable: false
                fecha:
                  type: date
                  description: 'Fecha de la receta.'
                  example: '2025-01-01'
                  nullable: false
                indicaciones:
                  type: string
                  description: 'opcional Indicaciones médicas.'
                  example: 'Tomar medicamento cada 8 horas'
                  nullable: true
              required:
                - consulta_medica_id
                - fecha
  '/api/recetas-medicas/{id}':
    get:
      summary: 'Obtiene una receta médica específica por su ID.'
      operationId: obtieneUnaRecetaMdicaEspecficaPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  consulta_medica_id: 1
                  fecha: '2025-01-01'
                  indicaciones: 'Tomar medicamento cada 8 horas'
                properties:
                  id:
                    type: integer
                    example: 1
                  consulta_medica_id:
                    type: integer
                    example: 1
                  fecha:
                    type: string
                    example: '2025-01-01'
                  indicaciones:
                    type: string
                    example: 'Tomar medicamento cada 8 horas'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Receta médica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Receta médica no encontrada'
      tags:
        - 'Receta Medica'
    put:
      summary: 'Actualiza una receta médica existente.'
      operationId: actualizaUnaRecetaMdicaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  consulta_medica_id: 1
                  fecha: '2025-01-01'
                  indicaciones: 'Tomar medicamento cada 8 horas'
                properties:
                  id:
                    type: integer
                    example: 1
                  consulta_medica_id:
                    type: integer
                    example: 1
                  fecha:
                    type: string
                    example: '2025-01-01'
                  indicaciones:
                    type: string
                    example: 'Tomar medicamento cada 8 horas'
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Los datos proporcionados no son válidos'
                properties:
                  message:
                    type: string
                    example: 'Los datos proporcionados no son válidos'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Receta médica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Receta médica no encontrada'
      tags:
        - 'Receta Medica'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                consulta_medica_id:
                  type: integer
                  description: 'opcional ID de la consulta médica.'
                  example: 1
                  nullable: false
                fecha:
                  type: date
                  description: 'opcional Fecha de la receta.'
                  example: '2025-01-01'
                  nullable: false
                indicaciones:
                  type: string
                  description: 'opcional Indicaciones médicas.'
                  example: 'Tomar medicamento cada 8 horas'
                  nullable: true
    delete:
      summary: 'Elimina una receta médica existente.'
      operationId: eliminaUnaRecetaMdicaExistente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Receta médica eliminada'
                properties:
                  message:
                    type: string
                    example: 'Receta médica eliminada'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Receta médica no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Receta médica no encontrada'
      tags:
        - 'Receta Medica'
    parameters:
      -
        in: path
        name: id
        description: 'ID de la receta médica.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/reportes/citas/{pacienteId}':
    get:
      summary: 'Obtiene todas las citas de un paciente específico.'
      operationId: obtieneTodasLasCitasDeUnPacienteEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      paciente_id: 1
                      medico:
                        id: 1
                        nombre: 'Dr. Juan Pérez'
                      especialidad:
                        id: 1
                        nombre: Cardiología
                      fecha: '2025-09-05'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        paciente_id: 1
                        medico:
                          id: 1
                          nombre: 'Dr. Juan Pérez'
                        especialidad:
                          id: 1
                          nombre: Cardiología
                        fecha: '2025-09-05'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        paciente_id:
                          type: integer
                          example: 1
                        medico:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            nombre:
                              type: string
                              example: 'Dr. Juan Pérez'
                        especialidad:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            nombre:
                              type: string
                              example: Cardiología
                        fecha:
                          type: string
                          example: '2025-09-05'
      tags:
        - Reportes
    parameters:
      -
        in: path
        name: pacienteId
        description: 'ID del paciente.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/reportes/historial/{pacienteId}':
    get:
      summary: 'Obtiene el historial clínico completo de un paciente.'
      operationId: obtieneElHistorialClnicoCompletoDeUnPaciente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Juan García'
                  historia_clinica:
                    id: 1
                    antecedentes: Hipertensión
                  consultas_medicas:
                    -
                      id: 1
                      fecha: '2025-09-05'
                      diagnostico: Gripe
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Juan García'
                  historia_clinica:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      antecedentes:
                        type: string
                        example: Hipertensión
                  consultas_medicas:
                    type: array
                    example:
                      -
                        id: 1
                        fecha: '2025-09-05'
                        diagnostico: Gripe
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        fecha:
                          type: string
                          example: '2025-09-05'
                        diagnostico:
                          type: string
                          example: Gripe
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - Reportes
    parameters:
      -
        in: path
        name: pacienteId
        description: 'ID del paciente.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/reportes/pagos/{pacienteId}':
    get:
      summary: 'Obtiene todos los pagos realizados por un paciente.'
      operationId: obtieneTodosLosPagosRealizadosPorUnPaciente
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      monto: 150.0
                      fecha: '2025-09-05'
                      factura:
                        id: 1
                        numero: F001-0001
                        total: 150.0
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        monto: 150
                        fecha: '2025-09-05'
                        factura:
                          id: 1
                          numero: F001-0001
                          total: 150
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        monto:
                          type: number
                          example: 150.0
                        fecha:
                          type: string
                          example: '2025-09-05'
                        factura:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            numero:
                              type: string
                              example: F001-0001
                            total:
                              type: number
                              example: 150.0
      tags:
        - Reportes
    parameters:
      -
        in: path
        name: pacienteId
        description: 'ID del paciente.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/reportes/recetas/{consultaId}':
    get:
      summary: 'Obtiene todas las recetas médicas asociadas a una consulta.'
      operationId: obtieneTodasLasRecetasMdicasAsociadasAUnaConsulta
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      consulta_medica_id: 1
                      medicamento:
                        id: 1
                        nombre: Paracetamol
                        dosis: 500mg
                      indicaciones: 'Tomar cada 8 horas'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        consulta_medica_id: 1
                        medicamento:
                          id: 1
                          nombre: Paracetamol
                          dosis: 500mg
                        indicaciones: 'Tomar cada 8 horas'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        consulta_medica_id:
                          type: integer
                          example: 1
                        medicamento:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            nombre:
                              type: string
                              example: Paracetamol
                            dosis:
                              type: string
                              example: 500mg
                        indicaciones:
                          type: string
                          example: 'Tomar cada 8 horas'
      tags:
        - Reportes
    parameters:
      -
        in: path
        name: consultaId
        description: 'ID de la consulta médica.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/reportes/aseguradora/{aseguradoraId}/pacientes':
    get:
      summary: 'Obtiene todos los pacientes afiliados a una aseguradora específica.'
      operationId: obtieneTodosLosPacientesAfiliadosAUnaAseguradoraEspecfica
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: 'Seguros ABC'
                  pacientes:
                    -
                      id: 1
                      nombre: 'Juan García'
                      numero_afiliado: AF001
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: 'Seguros ABC'
                  pacientes:
                    type: array
                    example:
                      -
                        id: 1
                        nombre: 'Juan García'
                        numero_afiliado: AF001
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        nombre:
                          type: string
                          example: 'Juan García'
                        numero_afiliado:
                          type: string
                          example: AF001
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Aseguradora no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Aseguradora no encontrada'
      tags:
        - Reportes
    parameters:
      -
        in: path
        name: aseguradoraId
        description: 'ID de la aseguradora.'
        example: 1
        required: true
        schema:
          type: integer
