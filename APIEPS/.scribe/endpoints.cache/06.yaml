## Autogenerated by Scribe. DO NOT MODIFY.

name: Medico
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/medicos
    metadata:
      groupName: Medico
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene una lista de todos los médicos.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "nombre": "Dr. Juan Pérez",
                "documento": "12345678",
                "telefono": "1234567890",
                "email": "juan.perez@example.com",
                "especialidad_id": 1,
                "ciudad_id": 1
              }
            ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6c1veVE5a4D8ad6kZ3ghPf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/medicos
    metadata:
      groupName: Medico
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea un nuevo médico.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del médico.'
        required: true
        example: 'Dr. Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'Número de documento del médico.'
        required: true
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'opcional Número de teléfono del médico.'
        required: false
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'opcional Correo electrónico del médico.'
        required: false
        example: juan.perez@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      especialidad_id:
        name: especialidad_id
        description: 'ID de la especialidad.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ciudad_id:
        name: ciudad_id
        description: 'ID de la ciudad.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: 'Dr. Juan Pérez'
      documento: '12345678'
      telefono: '1234567890'
      email: juan.perez@example.com
      especialidad_id: 1
      ciudad_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombre": "Dr. Juan Pérez",
            "documento": "12345678",
            "telefono": "1234567890",
            "email": "juan.perez@example.com",
            "especialidad_id": 1,
            "ciudad_id": 1
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Los datos proporcionados no son válidos"
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6c1veVE5a4D8ad6kZ3ghPf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/medicos/{id}'
    metadata:
      groupName: Medico
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene un médico específico por su ID.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del médico.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombre": "Dr. Juan Pérez",
            "documento": "12345678",
            "telefono": "1234567890",
            "email": "juan.perez@example.com",
            "especialidad_id": 1,
            "ciudad_id": 1
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Médico no encontrado"
          }
        headers: []
        description: 'Not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6c1veVE5a4D8ad6kZ3ghPf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/medicos/{id}'
    metadata:
      groupName: Medico
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza un médico existente.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del médico.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'opcional Nombre del médico.'
        required: false
        example: 'Dr. Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'opcional Número de documento del médico.'
        required: false
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'opcional Número de teléfono del médico.'
        required: false
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'opcional Correo electrónico del médico.'
        required: false
        example: juan.perez@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      especialidad_id:
        name: especialidad_id
        description: 'opcional ID de la especialidad.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ciudad_id:
        name: ciudad_id
        description: 'opcional ID de la ciudad.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: 'Dr. Juan Pérez'
      documento: '12345678'
      telefono: '1234567890'
      email: juan.perez@example.com
      especialidad_id: 1
      ciudad_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombre": "Dr. Juan Pérez",
            "documento": "12345678",
            "telefono": "1234567890",
            "email": "juan.perez@example.com",
            "especialidad_id": 1,
            "ciudad_id": 1
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Los datos proporcionados no son válidos"
          }
        headers: []
        description: 'Validation error'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Médico no encontrado"
          }
        headers: []
        description: 'Not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6c1veVE5a4D8ad6kZ3ghPf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/medicos/{id}'
    metadata:
      groupName: Medico
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Elimina un médico existente.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del médico.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Médico eliminado"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Médico no encontrado"
          }
        headers: []
        description: 'Not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6c1veVE5a4D8ad6kZ3ghPf'
    controller: null
    method: null
    route: null
    custom: []
